name: s4cp.sca

on:
  push:
    branches:
        - main
    paths:
      - "app/pom.xml"
  pull_request:
    branches:
        - main
    paths:
      - "app/pom.xml"
  workflow_dispatch:

env:
  GIT_ACTOR: "@${{ github.actor }}"  

jobs:
  depcheck:
    name: Software Composition Analysis Scan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_NOTIFY_USER_LIST: ${{ env.GIT_ACTOR }}

      - name: Build project with Maven
        run: mvn -f app/ clean install

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4==4.10.0

      - name: Run Depdency-Checker
        uses: dependency-check/Dependency-Check_Action@main
        id: depcheck
        with:
          project: 'Depdency-Checker'
          path: 'app'
          format: 'HTML'
          out: '.'

      - name: Parse Depdency-Checker Report Summary
        uses: mathiasvr/command-output@v2.0.0
        if: github.event_name == 'pull_request'
        continue-on-error: true
        id: depcheck_summary
        with:
          run: python3 scripts/sca/dependency_parser.py dependency-check-report.html

      - name: Depdency-Check Scan Output
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          DEPCHECK: ${{ steps.depcheck_summary.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `## Depdency-Check Scan Output
            
            #### Depdency-Check Scan \`${{ steps.depcheck.outcome }}\`

            <details><summary>Show Depdency-Check Output</summary>
            ${process.env.DEPCHECK}
            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment ({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Upload Test results
        uses: actions/upload-artifact@master
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        with:
          name: dependency-check-report.html
          path: dependency-check-report.html
