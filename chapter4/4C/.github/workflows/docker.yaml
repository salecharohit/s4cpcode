name: s4cp.docker

on:
  push:
    branches:
        - main
    paths:
      - "app/**"
      - "!**/README.md"
  workflow_dispatch:   

env:
  AWS_REGION: "us-east-2"
  SERVICE: "app"
  ENV: "prod"
  GIT_ACTOR: "@${{ github.actor }}"

jobs:
  BuildAndPushImageToECR:
    name: "Build and Push to ECR"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_NOTIFY_USER_LIST: ${{ env.GIT_ACTOR }}

      - name: Set short git commit SHA
        id: shortsha
        run: echo "short_sha=`echo ${GITHUB_SHA} | cut -c1-6`" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_PROD_ECR }}
          role-duration-seconds: 1200
          role-session-name: GithubBuildAndPushImageToECR
          role-skip-session-tagging: true
          mask-aws-account-id: false           

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "s4cpecr"
          IMAGE_TAG: ${{ env.SERVICE }}-${{ env.ENV }}-${{ steps.shortsha.outputs.short_sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f app/Dockerfile app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Docker Image : $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
